dnl Initialise autoconf

AC_INIT(app/equator.cpp)
AM_CONFIG_HEADER(config.h)

dnl Initialise automake

AM_INIT_AUTOMAKE(equator, 0.0.2)

dnl check if user wishes maintainer-mode ("--enable-maintainer-mode = yes")

AM_MAINTAINER_MODE

dnl Allow the program target name to be overriden

AC_ARG_PROGRAM

dnl Test for C++ compiler

AC_PROG_CXX

AC_ARG_ENABLE(debug,
    [  --enable-debug          enable debug information [default=no]],
    [
        if test "$enableval" = "yes"; then
            CXXFLAGS="$CXXFLAGS -Wall -DDEBUG"
        else
            CXXFLAGS="$CXXFLAGS -Wall -DNDEBUG"
        fi
    ],[
        CXXFLAGS="$CXXFLAGS -Wall -DNDEBUG"
    ]
)

AC_LANG_CPLUSPLUS

SDL_VERSION=1.2.0
AM_PATH_SDL($SDL_VERSION)
CPPFLAGS="$CPPFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

ATLAS_VERSION=0.4.3
AM_PATH_ATLAS($ATLAS_VERSION)
CPPFLAGS="$CPPFLAGS $ATLAS_CFLAGS"
LIBS="$LIBS $ATLAS_LIBS"

LIBXML_CHECK
CPPFLAGS="$CPPFLAGS $LIBXML_CFLAGS"
LIBS="$LIBS $LIBXML_LIBS"

AM_PATH_WFMATH(0.2.8, , AC_MSG_ERROR(Couldn't find wfmath) )
CPPFLAGS="$CPPFLAGS $WFMATH_CFLAGS"
LIBS="$LIBS $WFMATH_LIBS"

AM_PATH_SKSTREAM(0.2.0, , AC_MSG_ERROR(Couldn't find skstream) )
CPPFLAGS="$CPPFLAGS $SKSTREAM_CFLAGS"
LIBS="$LIBS $SKSTREAM_LIBS"
	
AM_PATH_ERIS(0.9.0, , AC_MSG_ERROR(Couldn't find eris))
CPPFLAGS="$CPPFLAGS $ERIS_CFLAGS"
LIBS="$LIBS $ERIS_LIBS"

dnl Versions required

GDKGLEXT_PKG=gdkglext-0.x
GDKGLEXT_REQUIRED_VERSION=0.4.1
AC_SUBST(GDKGLEXT_REQUIRED_VERSION)

GTKGLEXT_PKG=gtkglext-0.x
GTKGLEXT_REQUIRED_VERSION=0.4.1
AC_SUBST(GTKGLEXT_REQUIRED_VERSION)

GDKMM_PKG=gdkmm-2.0
GDKMM_REQUIRED_VERSION=1.3.17
AC_SUBST(GDKMM_REQUIRED_VERSION)

GTKMM_PKG=gtkmm-2.0
GTKMM_REQUIRED_VERSION=1.3.17
AC_SUBST(GTKMM_REQUIRED_VERSION)

GDKGLEXTMM_PKG=gdkglextmm-0.x
GDKGLEXTMM_REQUIRED_VERSION=0.4.1
AC_SUBST(GDKGLEXTMM_REQUIRED_VERSION)

GTKGLEXTMM_PKG=gtkglextmm-0.x
GTKGLEXTMM_REQUIRED_VERSION=0.4.1
AC_SUBST(GTKGLEXTMM_REQUIRED_VERSION)

PKG_CHECK_MODULES(BASE_DEPENDENCIES,
$GDKGLEXT_PKG >= $GDKGLEXT_REQUIRED_VERSION \
$GTKGLEXT_PKG >= $GTKGLEXT_REQUIRED_VERSION \
$GDKMM_PKG >= $GDKMM_REQUIRED_VERSION \
$GTKMM_PKG >= $GTKMM_REQUIRED_VERSION \
$GDKGLEXTMM_PKG >= $GDKGLEXTMM_REQUIRED_VERSION \
$GTKGLEXTMM_PKG >= $GTKGLEXTMM_REQUIRED_VERSION \
)

LIBS="$LIBS `$PKG_CONFIG --libs $GDKGLEXT_PKG $GTKGLEXT_PKG $GDKMM_PKG $GTKMM_PKG $GDKGLEXTMM_PKG $GTKGLEXTMM_PKG`"
CPPFLAGS="$CPPFLAGS `$PKG_CONFIG --cflags $GDKGLEXT_PKG $GTKGLEXT_PKG $GDKMM_PKG $GTKMM_PKG $GDKGLEXTMM_PKG $GTKGLEXTMM_PKG`"

AC_CHECK_LIB(SDL_image,IMG_Load)
AC_CHECK_LIB(GL,glViewport)
AC_CHECK_LIB(GLU,gluPerspective)

AC_CHECK_LIB(coal,main)
AC_CHECK_LIB(coalblade,main)
AC_CHECK_LIB(coaliso,main)

dnl AM_PATH_GIMP(1.2.0,
dnl     [
dnl         AC_DEFINE(BUILD_AS_GIMP_PLUGIN)
dnl         CPPFLAGS="$CPPFLAGS $GIMP_CFLAGS"
dnl         CXXFLAGS="$CXXFLAGS $GIMP_CFLAGS"
dnl         LIBS="$LIBS $GIMP_LIBS"
dnl     ],
dnl     AC_MSG_RESULT(Gimp library not found. Equator will be build as a stand alone app only, and no imaging editing features will be available))
dnl AC_SUBST(GIMP_PLUGIN_DIR)

dnl Generate files
AC_OUTPUT([
	Makefile
	app/Makefile
])
